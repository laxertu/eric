---
title: eric_sse
---
classDiagram

    class Message {
        + str type
        + dict | list | str | int | float | None payload
    }

    class MessageQueueListener {
        - __init__(self) None
        + async start(self) None
        + async stop(self) None
        + async is_running(self) bool
        + start_sync(self) None
        + stop_sync(self) None
        + is_running_sync(self) bool
        + on_message(self, msg) None
    }

    class AbstractChannel {
        - __init__(self, stream_delay_seconds) None
        + add_listener(self) MessageQueueListener
        + register_listener(self, l)
        + remove_listener(self, l_id)
        + deliver_next(self, listener_id) Message
        + dispatch(self, listener_id, msg)
        + broadcast(self, msg)
        + get_listener(self, listener_id) MessageQueueListener
        + notify_end(self)
        + async message_stream(self, listener) AsyncIterable[Any]
        + adapt(self, msg)* Any
    }

    class SSEChannel {
        - __init__(self, stream_delay_seconds, retry_timeout_milliseconds) None
        + adapt(self, msg) dict
    }

    class DataProcessingChannel {
        - __init__(self, max_workers, stream_delay_seconds) None
        + async process_queue(self, l) AsyncIterable[dict]
        + adapt(self, msg) dict
    }

    AbstractChannel --|> SSEChannel
    AbstractChannel --> Message
    MessageQueueListener --> Message
    AbstractChannel --|> DataProcessingChannel
    AbstractChannel --> MessageQueueListener
